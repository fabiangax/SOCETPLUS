/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Obras;

import Objetos.Cliente;
import Principal.Home;
import Otros.ConexionSQLServer;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marco
 */
public class SeleccionarCliente extends javax.swing.JDialog {

    String titulosClientes[] = {"Matricula", "Nombre", "Apellido", "Teléfono", "Dirección", "Empresa", "e-mail"};
    DefaultTableModel DTMC;
    Connection c = ConexionSQLServer.Conectar();
    String[] datosCliente;
    int num;
    DefaultTableModel DTMCC;

    public SeleccionarCliente(int num, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
            System.out.println(e);
        }
        initComponents();
        setLocationRelativeTo(null);
        this.num = num;
        //Tabla de clientes
        DTMC = new DefaultTableModel(titulosClientes, 0);
        tablaClientes.setModel(DTMC);
        try {
            Statement smt = c.createStatement();
            ResultSet res = smt.executeQuery("select * from CLIENTES");
            if (res.next()) {
                do {
                    Object fila[] = {String.valueOf(Integer.parseInt(res.getString("IDCliente"))), res.getString("Nombre"), res.getString("Apellido"), res.getString("Telefono"), res.getString("Direccion"), res.getString("Empresa"), res.getString("E_Mail")};
                    DTMC.addRow(fila);
                } while (res.next());
                tablaClientes.setModel(DTMC);
            }
        } catch (SQLException e) {
            System.out.println("Error");
        }
        Titulo.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        Titulo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txtBuscarClientes = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Seleccionar cliente");

        tablaClientes.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Nombre", "Apellido", "Telefono", "Dirección", "Empresa", "e-mail"
            }
        ));
        tablaClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tablaClientesFocusLost(evt);
            }
        });
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        tablaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        Titulo.setFont(new java.awt.Font("Cambria", 3, 24)); // NOI18N
        Titulo.setText("Seleccionar cliente");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/approve-circular-button (1).png"))); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/error.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Miscelaneo/lupa.png"))); // NOI18N

        txtBuscarClientes.setFont(new java.awt.Font("Cambria", 2, 14)); // NOI18N
        txtBuscarClientes.setText("Buscar por nombre o matricula...");
        txtBuscarClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarClientesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarClientesFocusLost(evt);
            }
        });
        txtBuscarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarClientesActionPerformed(evt);
            }
        });
        txtBuscarClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarClientesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarClientesKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(Titulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarClientes)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Titulo)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBuscarClientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaClientesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaClientesFocusLost
        tablaClientes.getSelectionModel().clearSelection();
    }//GEN-LAST:event_tablaClientesFocusLost

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        datosCliente = new String[7];
        int row = tablaClientes.getSelectedRow();
        for (int i = 0; i < 7; i++) {
            datosCliente[i] = String.valueOf(tablaClientes.getValueAt(row, i));
        }
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (datosCliente == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún cliente", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Cliente objCliente = new Cliente(datosCliente[0], datosCliente[1], datosCliente[2], datosCliente[3], datosCliente[4], datosCliente[5], datosCliente[6]);
            if (num == 0) {
                AgregarO.txtCliente.setText(datosCliente[0] + " - " + datosCliente[1] + " " + datosCliente[2]);
                AgregarO.check3.setVisible(true);
                AgregarO.clienteO = objCliente;
                this.dispose();
            }
            if (num == 1) {
                ModificarO.txtCliente.setText(datosCliente[0] + " - " + datosCliente[1] + " " + datosCliente[2]);
                ModificarO.check3.setVisible(true);
                ModificarO.clienteO = objCliente;
                this.dispose();
            }
            if (num == 2) {
                DTMCC = new DefaultTableModel(titulosClientes, 0);
                Home.tablaCC.setModel(DTMCC);
                try {
                    Statement smt = c.createStatement();
                    ResultSet res = smt.executeQuery("select * from CLIENTES");
                    if (res.next()) {
                        do {
                            Object fila[] = {objCliente.getMatricula(), objCliente.getNombre(), objCliente.getApellido(), objCliente.getTelefono(), objCliente.getDireccion(), objCliente.getEmpresa(), objCliente.getEmail()};
                            DTMCC.addRow(fila);
                        } while (res.next());
                        Home.tablaCC.setModel(DTMCC);
                    }
                } catch (SQLException e) {
                    System.out.println("Error");
                }
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtBuscarClientesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarClientesFocusLost
        if (txtBuscarClientes.getText().isEmpty()) {
            txtBuscarClientes.setText("Buscar por nombre o matricula...");
        }
    }//GEN-LAST:event_txtBuscarClientesFocusLost

    private void txtBuscarClientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarClientesFocusGained
        if (txtBuscarClientes.getText().equals("Buscar por nombre o matricula...")) {
            txtBuscarClientes.setText("");
        }
    }//GEN-LAST:event_txtBuscarClientesFocusGained

    private void txtBuscarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarClientesActionPerformed

    private void tablaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaClientesKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaClientesKeyPressed

    private void txtBuscarClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarClientesKeyPressed
        DTMC = new DefaultTableModel(titulosClientes, 0);
        this.tablaClientes.setModel(DTMC);
        ResultSet res = mostrar(txtBuscarClientes.getText());
        try {
            if (res.next()) {
                do {
                    Object fila[] = {res.getString("IDCliente"), res.getString("Nombre"), res.getString("Apellido"), res.getString("Telefono"), res.getString("Direccion"), res.getString("Empresa"), res.getString("E_Mail")};
                    DTMC.addRow(fila);
                } while (res.next());
                this.tablaClientes.setModel(DTMC);
            }
        } catch (SQLException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_txtBuscarClientesKeyPressed

    private void txtBuscarClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarClientesKeyReleased
        DTMC = new DefaultTableModel(titulosClientes, 0);
        this.tablaClientes.setModel(DTMC);
        ResultSet res = mostrar(txtBuscarClientes.getText());
        try {
            if (res.next()) {
                do {
                    Object fila[] = {res.getString("IDCliente"), res.getString("Nombre"), res.getString("Apellido"), res.getString("Telefono"), res.getString("Direccion"), res.getString("Empresa"), res.getString("E_Mail")};
                    DTMC.addRow(fila);
                } while (res.next());
                this.tablaClientes.setModel(DTMC);
            }
        } catch (SQLException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_txtBuscarClientesKeyReleased

    public ResultSet mostrar(String str) {
        ResultSet RS = null;
        try {
            Statement ST = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            String sql = "select * from CLIENTES where IDCliente like '" + str + "%'" + " OR Nombre like '" + str + "%'" + " OR Apellido like '" + str + "%'";
            RS = ST.executeQuery(sql);
        } catch (SQLException e) {
            System.out.println(e);
        }
        return RS;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            SeleccionarCliente dialog = new SeleccionarCliente(0, new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtBuscarClientes;
    // End of variables declaration//GEN-END:variables
}
